{"ast":null,"code":"var _jsxFileName = \"C:\\\\redux\\\\redux-react\\\\01-starting-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport classes from './Counter.module.css'; //Counter.js에 전역 액션 객체를 불러와서 사용하겠다는 뜻.\n\nimport { counterActions } from '../store/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  //store에 action을 보낸다\n  const dispatch = useDispatch(); // UseSelector\n  // 원하는 값만 선택할 수 있게 한다.\n  // 자동으로 구독을 관리한다.\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n  const [value, setValue] = useState(0);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const onChange = _ref => {\n    let {\n      target\n    } = _ref;\n\n    if (!target.value) {\n      return;\n    } else {\n      setValue(parseInt(target.value));\n    }\n\n    ;\n  };\n\n  const increaseHandler = () => {\n    //payload가 필요하다면 인수로 전달해준다.\n    // 자동으로 액션 생성자를 생성하고 type: SOME-unique-identifier를 전달하고\n    // 인자로서 실행하고자 하는 액션 메서드에 전달한 값을\n    // 추가 필드명이 payload인 곳에 저장하기 때문입니다.\n    dispatch(counterActions.increase(value));\n  };\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggoleCounter());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increment by inputValue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"qDn2pCV7sIRFb0HE5uXBMhDP86M=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useState","useSelector","useDispatch","classes","counterActions","Counter","dispatch","counter","state","show","showCounter","value","setValue","incrementHandler","increment","decrementHandler","decrement","onChange","target","parseInt","increaseHandler","increase","toggleCounterHandler","toggoleCounter"],"sources":["C:/redux/redux-react/01-starting-project/src/components/Counter.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSelector,useDispatch } from 'react-redux';\nimport classes from './Counter.module.css';\n\n//Counter.js에 전역 액션 객체를 불러와서 사용하겠다는 뜻.\nimport {counterActions} from '../store/index'\n\nconst Counter = () => {\n  //store에 action을 보낸다\n  const dispatch = useDispatch();\n  // UseSelector\n  // 원하는 값만 선택할 수 있게 한다.\n  // 자동으로 구독을 관리한다.\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n\n  const [value,setValue] = useState(0);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  }\n  const onChange = ({target}) => {\n    if(!target.value){\n      \n      return;\n    }else{\n      setValue(parseInt(target.value))\n    };\n  \n  }\n\n  const increaseHandler = () => {\n    //payload가 필요하다면 인수로 전달해준다.\n    // 자동으로 액션 생성자를 생성하고 type: SOME-unique-identifier를 전달하고\n    // 인자로서 실행하고자 하는 액션 메서드에 전달한 값을\n    // 추가 필드명이 payload인 곳에 저장하기 때문입니다.\n    dispatch(counterActions.increase(value))\n  }\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggoleCounter())\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      \n      <input type=\"text\" value={value} onChange={onChange}/>\n      \n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increment by inputValue</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;;AACA,SAAQC,cAAR,QAA6B,gBAA7B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB;EACA,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFoB,CAGpB;EACA;EACA;;EACA,MAAMK,OAAO,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;EACA,MAAME,IAAI,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAAxB;EAEA,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAC,CAAD,CAAjC;;EAEA,MAAMa,gBAAgB,GAAG,MAAM;IAC7BP,QAAQ,CAACF,cAAc,CAACU,SAAf,EAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,gBAAgB,GAAG,MAAM;IAC7BT,QAAQ,CAACF,cAAc,CAACY,SAAf,EAAD,CAAR;EACD,CAFD;;EAGA,MAAMC,QAAQ,GAAG,QAAc;IAAA,IAAb;MAACC;IAAD,CAAa;;IAC7B,IAAG,CAACA,MAAM,CAACP,KAAX,EAAiB;MAEf;IACD,CAHD,MAGK;MACHC,QAAQ,CAACO,QAAQ,CAACD,MAAM,CAACP,KAAR,CAAT,CAAR;IACD;;IAAA;EAEF,CARD;;EAUA,MAAMS,eAAe,GAAG,MAAM;IAC5B;IACA;IACA;IACA;IACAd,QAAQ,CAACF,cAAc,CAACiB,QAAf,CAAwBV,KAAxB,CAAD,CAAR;EACD,CAND;;EAQA,MAAMW,oBAAoB,GAAG,MAAM;IACjChB,QAAQ,CAACF,cAAc,CAACmB,cAAf,EAAD,CAAR;EACD,CAFD;;EAIA,oBACE;IAAM,SAAS,EAAEpB,OAAO,CAACI,OAAzB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGE,IAAI,iBAAI;MAAK,SAAS,EAAEN,OAAO,CAACQ,KAAxB;MAAA,UAAgCJ;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFX,eAIE;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEI,KAA1B;MAAiC,QAAQ,EAAEM;IAA3C;MAAA;MAAA;MAAA;IAAA,QAJF,eAME;MAAA,wBACE;QAAQ,OAAO,EAAEJ,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEO,eAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEL,gBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,eAWE;MAAQ,OAAO,EAAEO,oBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAvDD;;GAAMjB,O;UAEaH,W,EAIDD,W,EACHA,W;;;KAPTI,O;AAyDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}