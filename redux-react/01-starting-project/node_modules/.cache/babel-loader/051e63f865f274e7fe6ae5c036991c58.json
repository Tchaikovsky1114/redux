{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nexport const INCREMENT = 'increment';\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === INCREMENT) {\n    // 1. 기존 state와 병합되지 않는다는 않으며 기존 state를 덮어 쓴다는 점이다.\n    // 2. Redux를 사용할 때에는 기존의 state에 변형을 주어서는 절대로 안된다.\n    // 3. 그렇기 때문에 action에 맞게 새로운 state 객체를 반환하여 항상 [재정의]한다.\n    // 객체와 배열은 참조 값이기 때문에 원본의 state를 절대 변경해서는 안된다.\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","initialState","counter","showCounter","INCREMENT","counterReducer","state","action","type","amount","store"],"sources":["C:/redux/redux-react/01-starting-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = { counter : 0, showCounter: true };\r\n\r\nexport const INCREMENT = 'increment'\r\n\r\nconst counterReducer = (state = initialState ,action) => {\r\n\r\n  if(action.type === INCREMENT){\r\n\r\n    // 1. 기존 state와 병합되지 않는다는 않으며 기존 state를 덮어 쓴다는 점이다.\r\n    // 2. Redux를 사용할 때에는 기존의 state에 변형을 주어서는 절대로 안된다.\r\n    // 3. 그렇기 때문에 action에 맞게 새로운 state 객체를 반환하여 항상 [재정의]한다.\r\n    // 객체와 배열은 참조 값이기 때문에 원본의 state를 절대 변경해서는 안된다.\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    }\r\n  }\r\n\r\n  if(action.type === 'increase'){\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    }\r\n  }\r\n\r\n\r\n  if(action.type === 'decrement'){\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter\r\n    }\r\n  }\r\n  if(action.type === 'toggle'){\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter\r\n    }\r\n  }\r\n  return state;\r\n\r\n}\r\n\r\n\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAG,CAAZ;EAAeC,WAAW,EAAE;AAA5B,CAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;;AAEP,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBL,YAAyB;EAAA,IAAXM,MAAW;;EAEvD,IAAGA,MAAM,CAACC,IAAP,KAAgBJ,SAAnB,EAA6B;IAE3B;IACA;IACA;IACA;IACA,OAAO;MACLF,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEG,KAAK,CAACH;IAFd,CAAP;EAID;;EAED,IAAGI,MAAM,CAACC,IAAP,KAAgB,UAAnB,EAA8B;IAC5B,OAAO;MACLN,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACE,MAD3B;MAELN,WAAW,EAAEG,KAAK,CAACH;IAFd,CAAP;EAID;;EAGD,IAAGI,MAAM,CAACC,IAAP,KAAgB,WAAnB,EAA+B;IAC7B,OAAO;MACLN,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB,CADpB;MAELC,WAAW,EAAEG,KAAK,CAACH;IAFd,CAAP;EAID;;EACD,IAAGI,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA4B;IAC1B,OAAO;MACLN,OAAO,EAAEI,KAAK,CAACJ,OADV;MAELC,WAAW,EAAE,CAACG,KAAK,CAACH;IAFf,CAAP;EAID;;EACD,OAAOG,KAAP;AAED,CApCD;;AAwCA,MAAMI,KAAK,GAAGV,WAAW,CAACK,cAAD,CAAzB;AAEA,eAAeK,KAAf"},"metadata":{},"sourceType":"module"}